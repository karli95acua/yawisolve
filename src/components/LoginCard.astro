---
export interface Props {
  onLogin: (email: string, password: string) => void;
  onForgotPassword: () => void;
}
---

<div class="login-card">
  <!-- Logo -->
  <img src="/SOLVE (2).png" alt="Yawi Solve Logo" />
  <h2>Iniciar Sesión</h2>

  <!-- Formulario de login -->
  <form id="loginForm" class="form-group">
    <label for="email">Correo electrónico</label>
    <input type="email" id="email" name="email" placeholder="Ingresa tu correo" required />

    <label for="password">Contraseña</label>
    <input type="password" id="password" name="password" placeholder="Ingresa tu contraseña" required />

    <button type="submit">Iniciar Sesión</button>
  </form>

  <!-- Recuperar contraseña -->
  <a href="#" id="forgotPassword">¿Olvidaste tu contraseña?</a>
</div>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("loginForm");
    const forgotPassword = document.getElementById("forgotPassword");

    form?.addEventListener("submit", async (event) => {
      event.preventDefault();
      const email = form.email.value;
      const password = form.password.value;

      try {
        const response = await fetch("http://localhost:4000/auth/login", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email, password })  // Captura datos ingresados y los envía
        });

        const data = await response.json();
        if (!response.ok) throw new Error(data.message || "Error en el login");

        localStorage.setItem("token", data.token);  // Guarda el token en el almacenamiento local
        window.location.href = "/";  // Redirige al usuario autenticado
      } catch (error) {
        console.error("Error en el login:", error);
        alert(error.message);
      }
    });

    forgotPassword?.addEventListener("click", (event) => {
      event.preventDefault();
      Astro.props.onForgotPassword();
    });
  });
</script>

<style>
  .login-card {
    background-color: white;
    border-radius: 12px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);
    width: 350px;
    padding: 2rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .login-card img {
    max-width: 120px;
    margin: 0 auto;
  }

  .login-card h2 {
    font-size: 1.5rem;
    color: #204f72;
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .form-group input {
    padding: 0.8rem;
    font-size: 1rem;
    border: 1px solid #ddd;
    border-radius: 8px;
    width: 100%;
    padding: 10px;
    box-sizing: border-box;
  }

  button {
    background-color: #204f72;
    color: white;
    padding: 0.8rem;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s ease;
  }

  button:hover {
    background-color: #1868a6;
  }

  a {
    color: #204f72;
    font-size: 0.9rem;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }
</style>
